<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?teipublisher odd="docbook.odd"?>
<article xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>A News Blog Based on TEI Processing Model</title>
        <author>
            <personname>
                <surname>Meier</surname>
                <firstname>Wolfgang</firstname>
            </personname>
        </author>
        <pubdate>2018-10-25</pubdate>
        <abstract>
            <para>Since a while we planned to set up a blog to publish news and articles about TEI Publisher.
                Instead of using one of the well-known software packages, we decided to go with the technologies
                TEI Publisher 4.0 provides.</para>
        </abstract>
        <keywordset vocab="#genre">
            <keyword>Article</keyword>
        </keywordset>
    </info>
    <section>
        <title>Docbook instead of TEI</title>
        <para>Articles are written in Docbook 5 and transformed to HTML via <link xlink:href="https://gitlab.existsolutions.com/tei-publisher/tei-publisher-app/blob/master/odd/docbook.odd">docbook.odd</link>, which is
            also used for the TEI Publisher documentation. While we could have used TEI, embedding source code or media
            feels easier in docbook, which has dedicated elements for those purposes. We also wanted to show that the
            TEI Processing Model is a universal technology and should not be limited to TEI!</para>
    </section>
    <section>
        <title>Webcomponents</title>
        <para>The list of articles (left sidebar) and the content are webcomponents. Those are a bit like lego blocks you can
            freely move around on a page. They encapsulate both: the presentation and the desired functionality for a given
            information item within a custom HTML element. TEI Publisher 4.0 is entirely based on webcomponents and will ship
            with a set of general-purpose components, which can be used to e.g.:</para>
        <orderedlist>
            <listitem>
                <para>retrieve a fragment of a TEI document, transform it via ODD and display the content</para>
            </listitem>
            <listitem>
                <para>call an XQuery and show the result</para>
            </listitem>
            <listitem>
                <para>communicate with other components via events and channels</para>
            </listitem>
        </orderedlist>
        <para>The only custom code I had to write for the page you are reading is a small XQuery script to retrieve the list
            of blog articles and order them by publication date. All the rest of the page is based on standard components
            which will be part of TEI Publisher 4.0. To wet your appetite, the HTML producing the body of this page looks like
            this:</para>
        <programlisting language="xml"><![CDATA[<main class="content-body">
    <aside>
        <h1>Blog</h1>
        <pb-load url="modules/blog.xql?doc=${doc}" auto="auto" emit="transcription"
            data-template="pages:parse-params"/>
    </aside>
    <div class="content">
        <pb-view id="view1" src="document1" view="single" subscribe="transcription"
            emit="transcription" append-footnotes="append-footnotes" odd="docbook"/>
    </div>
</main>]]></programlisting>
    </section>
</article>
